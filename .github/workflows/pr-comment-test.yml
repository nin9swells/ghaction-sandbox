name: PR Comment Test

permissions:
   contents: read
   issues: write
   pull-requests: write
   
on:
  workflow_dispatch:

jobs:
  comment-test:
    name: Comment Test
    runs-on: ubuntu-latest

    env:
      MY_MESSAGE: |
        This is a multi-line message.
        It can span multiple lines.
      JINJA_TEMPLATE: |
        {{ env }} Terraform plan output of: {{ directory }}
        
        <details{% if not PLAN_OUTPUT_COLLAPSED %} open{% endif %}>
        <summary>Click me</summary>
        
        ```hcl
        {{ plan_output }}
        ```
        
        </details>
        
    steps:
      - name: Simulate output
        id: simulate
        run: |
          echo "env=Staging" >> $GITHUB_OUTPUT
          echo "directoryA=ayee" >> $GITHUB_OUTPUT
          echo "directoryB=uyee" >> $GITHUB_OUTPUT
          echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "COLLAPSE_PLAN=false" >> $GITHUB_OUTPUT

      # - name: Prepare Jinja in file
      #   run: |
      #     mkdir -p temp
      #     echo "$JINJA_TEMPLATE" > temp/comment_template.j2
      #     cat temp/comment_template.j2

      # - name: Prepare comment output
      #   uses: cuchi/jinja2-action@v1.2.2
      #   with:
      #     template: temp/comment_template.j2
      #     output_file: temp/comment_output
      #     strict: false
      #     variables: |
      #       env=${{ steps.simulate.outputs.env }}
      #       directory=${{ steps.simulate.outputs.directoryA }}
      #       plan_output=${{ toJSON(env.MY_MESSAGE) }}
      #       PLAN_OUTPUT_COLLAPSED=true

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
           issue-number: 2
           comment-author: 'github-actions[bot]'
           body-includes: Plan ${{ steps.simulate.outputs.directoryA }}

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: 2
          # body-path: temp/comment_output
          body: |
            Plan ${{ steps.simulate.outputs.directoryA }} in ${{ steps.simulate.outputs.env }}

            <details${{ steps.simulate.outputs.COLLAPSE_PLAN == 'true' && ' open' || '' }}>
            <summary>Click me</summary>
            
            ```hcl
            
            ${{ env.MY_MESSAGE }}

            ```

            Updated: ${{ steps.simulate.outputs.today }}
          edit-mode: replace
